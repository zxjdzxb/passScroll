import{_ as s,o as a,c as l,Q as n}from"./chunks/framework.2576a40d.js";const e="/passScroll/assets/Flex.0fc6db0b.png",p="/passScroll/assets/flex-direction.ab215ab7.png",o="/passScroll/assets/flex-wrap.78e1a39b.png",t="/passScroll/assets/justify-content.82055efc.png",c="/passScroll/assets/align-items.05393bd7.png",r="/passScroll/assets/order.c681b8d2.png",i="/passScroll/assets/align-self.6109c1dc.png",m=JSON.parse('{"title":"flex布局","description":"","frontmatter":{},"headers":[],"relativePath":"blog/flex.md","filePath":"blog/flex.md","lastUpdated":1709552050000}'),E={name:"blog/flex.md"},y=n('<h1 id="flex布局" tabindex="-1">flex布局 <a class="header-anchor" href="#flex布局" aria-label="Permalink to &quot;flex布局&quot;">​</a></h1><ul><li>container 容器(一般用来做父元素)</li><li>items 项目（一般用来做子元素）</li></ul><p><img src="'+e+`" alt="Flex"></p><h2 id="容器的属性" tabindex="-1">容器的属性 <a class="header-anchor" href="#容器的属性" aria-label="Permalink to &quot;容器的属性&quot;">​</a></h2><p>首先，实现 flex 布局需要先指定一个容器，任何一个容器都可以被指定为 flex 布局，这样容器内部的元素就可以使用 flex 来进行布局。<br> flex： 将对象作为弹性伸缩盒显示, 没有为父元素main设置宽度，默认为100%；<br> inline-flex：将对象作为内联块级弹性伸缩盒显示，没有给父元素设置宽度，但是父元素默认会根据子元素的宽高去自适应。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.container</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">display</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">flex</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">inline-flex</span><span style="color:#E1E4E8;">; //可以有两种取值</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.container</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">display</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">flex</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">inline-flex</span><span style="color:#24292E;">; //可以有两种取值</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>分别生成一个块状或行内的 flex 容器盒子。简单说来，如果你使用块元素如 div，你就可以使用 flex，而如果你使用行内元素，你可以使用 inline-flex。</p><p><strong>需要注意的是：当时设置 flex 布局之后，子元素的 float、clear、vertical-align 的属性将会失效。</strong></p><h3 id="flex-direction-决定主轴的方向-即项目的排列方向" tabindex="-1">flex-direction: 决定主轴的方向(即项目的排列方向) <a class="header-anchor" href="#flex-direction-决定主轴的方向-即项目的排列方向" aria-label="Permalink to &quot;flex-direction: 决定主轴的方向(即项目的排列方向)&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.container</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex-direction</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">row</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">row-reverse</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">column</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">column-reverse</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.container</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex-direction</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">row</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">row-reverse</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">column</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">column-reverse</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>默认值：row，主轴为水平方向，起点在左端。</p><p><img src="`+p+`" alt="Flex-direction"></p><h3 id="flex-wrap-决定容器内项目是否可换行" tabindex="-1">flex-wrap: 决定容器内项目是否可换行 <a class="header-anchor" href="#flex-wrap-决定容器内项目是否可换行" aria-label="Permalink to &quot;flex-wrap: 决定容器内项目是否可换行&quot;">​</a></h3><p>默认情况下，项目都排在主轴线上，使用 flex-wrap 可实现项目的换行。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.container</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex-wrap</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">nowrap</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">wrap</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">wrap-reverse</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.container</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex-wrap</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">nowrap</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">wrap</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">wrap-reverse</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>默认值：nowrap 不换行，即当主轴尺寸固定时，当空间不足时，项目尺寸会随之调整而并不会挤到下一行。</p><p><img src="`+o+`" alt="flex-wrap"></p><h3 id="flex-flow" tabindex="-1">flex-flow <a class="header-anchor" href="#flex-flow" aria-label="Permalink to &quot;flex-flow&quot;">​</a></h3><p><code>flex-flow</code>  属性是  <code>flex-direction</code>  属性和  <code>flex-wrap</code>  属性的简写形式，默认值为  <code>row nowrap</code></p><p>默认值为: row nowrap，感觉没什么卵用，老老实实分开写就好了。这样就不用记住这个属性了。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">flex-flow</span><span style="color:#E1E4E8;">: &lt;</span><span style="color:#85E89D;">flex-direction</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">|| &lt;</span><span style="color:#85E89D;">flex-wrap</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">flex-flow</span><span style="color:#24292E;">: &lt;</span><span style="color:#22863A;">flex-direction</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">|| &lt;</span><span style="color:#22863A;">flex-wrap</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">;</span></span></code></pre></div><h3 id="justify-content-定义了项目在主轴的对齐方式。" tabindex="-1">justify-content：定义了项目在主轴的对齐方式。 <a class="header-anchor" href="#justify-content-定义了项目在主轴的对齐方式。" aria-label="Permalink to &quot;justify-content：定义了项目在主轴的对齐方式。&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.container</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">justify-content</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">flex-start</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">flex-end</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">space-between</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">space-around</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.container</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">justify-content</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">flex-start</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">flex-end</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">center</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">space-between</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">space-around</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>建立在主轴为水平方向时测试，即 flex-direction: row</strong></p><ul><li><p><code>flex-start</code>（默认值）：左对齐</p></li><li><p><code>flex-end</code>：右对齐</p></li><li><p><code>center</code>： 居中</p></li><li><p><code>space-between</code>：两端对齐，项目之间的间隔都相等。</p></li><li><p><code>space-around</code>：每个项目两侧的间隔相等。</p></li><li><p><code>space-evenly</code>：每个项目的间隔与项目和容器之间的间隔是相等的。</p></li></ul><p><img src="`+t+`" alt="justify-content"></p><h3 id="align-items-定义了项目在交叉轴上的对齐方式" tabindex="-1">align-items: 定义了项目在交叉轴上的对齐方式 <a class="header-anchor" href="#align-items-定义了项目在交叉轴上的对齐方式" aria-label="Permalink to &quot;align-items: 定义了项目在交叉轴上的对齐方式&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.container</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">align-items</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">flex-start</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">flex-end</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">baseline</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">stretch</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.container</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">align-items</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">flex-start</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">flex-end</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">center</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">baseline</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">stretch</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><strong>建立在主轴为水平方向时测试，即 flex-direction: row</strong></p><ul><li><p><code>flex-start</code>：交叉轴的起点对齐。</p></li><li><p><code>flex-end</code>：交叉轴的终点对齐。</p></li><li><p><code>center</code>：交叉轴的中点对齐。</p></li><li><p><code>stretch</code>（默认值）: 如果项目未设置高度或设为auto，将占满整个容器的高度。</p></li><li><p><code>baseline</code>: 项目的第一行文字的基线对齐。</p></li></ul><p><img src="`+c+'" alt="align-items"></p><h3 id="align-content" tabindex="-1">align-content <a class="header-anchor" href="#align-content" aria-label="Permalink to &quot;align-content&quot;">​</a></h3><p><code>align-content</code> 属性定义了多根轴线的对齐方式，前提是需要设置flex-wrap: wrap，否则不会有效</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">align-content</span><span style="color:#E1E4E8;">: </span><span style="color:#85E89D;">flex-start</span><span style="color:#E1E4E8;"> | </span><span style="color:#85E89D;">flex-end</span><span style="color:#E1E4E8;"> | </span><span style="color:#85E89D;">center</span><span style="color:#E1E4E8;"> | </span><span style="color:#85E89D;">space-between</span><span style="color:#E1E4E8;"> | </span><span style="color:#85E89D;">space-around</span><span style="color:#E1E4E8;"> | stretch;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">align-content</span><span style="color:#24292E;">: </span><span style="color:#22863A;">flex-start</span><span style="color:#24292E;"> | </span><span style="color:#22863A;">flex-end</span><span style="color:#24292E;"> | </span><span style="color:#22863A;">center</span><span style="color:#24292E;"> | </span><span style="color:#22863A;">space-between</span><span style="color:#24292E;"> | </span><span style="color:#22863A;">space-around</span><span style="color:#24292E;"> | stretch;</span></span></code></pre></div><ul><li><code>flex-start</code>：与交叉轴的起点对齐。</li><li><code>flex-end</code>：与交叉轴的终点对齐。</li><li><code>center</code>：与交叉轴的中点对齐。</li><li><code>stretch</code>（默认值）：轴线占满整个交叉轴。</li><li><code>space-between</code>：与交叉轴两端对齐，轴线之间的间隔平均分布。</li><li><code>space-around</code>：每根轴线两侧的间隔都相等。</li></ul><h2 id="items属性" tabindex="-1">items属性 <a class="header-anchor" href="#items属性" aria-label="Permalink to &quot;items属性&quot;">​</a></h2><h3 id="order" tabindex="-1">order <a class="header-anchor" href="#order" aria-label="Permalink to &quot;order&quot;">​</a></h3><p><code>order</code>  属性定义项目的排列顺序。数值越小，排列越靠前，默认为0，可以是负数。</p><p><img src="'+r+`" alt="order"></p><h3 id="flex-grow" tabindex="-1">flex-grow <a class="header-anchor" href="#flex-grow" aria-label="Permalink to &quot;flex-grow&quot;">​</a></h3><p><strong>定义项目的放大比例</strong></p><p><code>flex-grow</code>  flex容器中剩余空间的多少应该分配给项目，也称为扩展规则。最终的项目的宽度为：自身宽度 + 容器剩余空间分配宽度，flex-grow最大值是1，超过1按照1来扩展 items上加flex-grow（控制变胖）</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.items</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex-grow</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.items</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex-grow</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="flex-shrink" tabindex="-1">flex-shrink <a class="header-anchor" href="#flex-shrink" aria-label="Permalink to &quot;flex-shrink&quot;">​</a></h3><p>items上加flex-shrink（控制变瘦，一般写flex-shrink：0防止变瘦，默认是1）</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.items</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex-shrink</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.items</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex-shrink</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="flex-basis" tabindex="-1">flex-basis <a class="header-anchor" href="#flex-basis" aria-label="Permalink to &quot;flex-basis&quot;">​</a></h3><p>items上加flex-basis（控制基本宽度，默认auto） flex：flex-grow flex-gshrink flex-basis(缩写)</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.items</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">flex</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">100</span><span style="color:#F97583;">px</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.items</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">flex</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">1</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">100</span><span style="color:#D73A49;">px</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="align-self" tabindex="-1">align-self <a class="header-anchor" href="#align-self" aria-label="Permalink to &quot;align-self&quot;">​</a></h3><p>align-self定制align-items（某一个items可以特立独行，不常用）</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">.item</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">align-self</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">auto</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">flex-start</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">flex-end</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">center</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">baseline</span><span style="color:#E1E4E8;"> | </span><span style="color:#79B8FF;">stretch</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">.item</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">align-self</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">auto</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">flex-start</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">flex-end</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">center</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">baseline</span><span style="color:#24292E;"> | </span><span style="color:#005CC5;">stretch</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><img src="`+i+'" alt="align-self"></p><h2 id="重点属性" tabindex="-1">重点属性 <a class="header-anchor" href="#重点属性" aria-label="Permalink to &quot;重点属性&quot;">​</a></h2><ul><li><code>display: flex</code>让一个元素变成flex容器</li><li><code>flex-direction: row/column</code>表示流动方向横着还是竖着</li><li><code>flex-wrap: wrap</code>是否换行</li><li><code>justify-content: conter/space-between</code>主轴（横轴）方向怎么对齐</li><li><code>align-items: center</code>次轴（纵轴）方向怎么对齐</li></ul><p><a href="https://code.juejin.cn/pen/7140893739521671179" target="_blank" rel="noreferrer">代码片段</a></p>',56),d=[y];function h(f,g,x,u,C,b){return a(),l("div",null,d)}const v=s(E,[["render",h]]);export{m as __pageData,v as default};
